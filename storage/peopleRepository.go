package storage

import (
	"fmt"
	"strconv"
	"strings"

	"github.com/zykunov/courseGoFirst/vkApiBot/models"
)

// –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–∞–π—Å –∏–∑ –º–æ–¥–µ–ª–µ–π users –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–¥
func UserAdd(userSlice []models.User) (msg string) {

	var stBuilder strings.Builder

	for _, user := range userSlice {
		string := "https://vk.com/id" + strconv.Itoa(user.VkId) + "\n"
		stBuilder.WriteString(string)

		GetDB().Create(&user)
	}

	if stBuilder.String() == "" {
		return "–ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
	}

	return "–ì—Ä—É–ø–ø–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã üëå"
}

// —Å–µ–ª–µ–∫—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
func GetAllUsers(userId int64, vkgroup_id string) (usersFromDB []*models.User) {

	result := make([]*models.User, 0)

	err := GetDB().Table("users").Select("vk_id").Where("user_id = ? AND vkgroup_id = ?", int(userId), vkgroup_id).Find(&result).Error
	if err != nil {
		fmt.Println(err)
	}

	return result
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
